package game;
//60001-69999为请求   70001-79999为返回
enum MsgType {
    RES_TABLE_INFO = 70001;//发送桌子信息
    RES_ENTER_TABLE = 70002;//广播加入桌子
    REQ_LEAVE_TABLE = 60003;//离开桌子请求
    RES_LEAVE_TABLE = 70003;//离开桌子返回，成功会广播
    REQ_SIT_DOWN = 60004;//请求坐下
    RES_SIT_DOWN = 70004;//请求坐下返回
    REQ_RESUME = 60005;//请求重连信息
    REQ_CHAT = 60006;//聊天
    RES_CHAT = 70006;//聊天
    REQ_READY = 60007;
    RES_RESUME_MJ = 70105;//麻将重连信息
}

message resTableInfo {
    message player {
        required int32 uid = 1; //用户uid
        required string nickname = 2; //用户昵称
        required int32 seatid = 3; //用户座位
        required int32 sex = 4; //性别
        required int32 online = 5; //是否在线，1在线，0不在线
        optional int32 ready = 6; //是否已经准备，1准备，0为准备
        optional int32 score = 7; //当前分值
        optional sint64 gold = 8; //金币
        optional int32 trusteeship = 10; //是否托管1托管
        optional string headimg = 11; //用户头像的URL
        repeated int32 params = 12; //不同游戏的额外用户数据
    }

    required int32 owner = 1; //房主
    required int32 endtime = 2; //0表示已经开局，时间戳表示房间解散的时间
    required int32 gameid = 3; //游戏ID
    required int32 times = 4; //游戏局数
    required int32 playedtimes = 5; //已经进行的局数
    required int32 score = 6; //低分
    required int32 paytype = 7; //1表示AA，2表示房主付费
    required int32 roomid = 8; //房间号
    required int32 isGoldGame = 9; //是否是金币模式0表示开房模式，1表示金币模式
    repeated player players = 10; //玩家列表
    repeated int32 extradata = 11; //不同游戏的额外数据
}

message reqLeaveTable {
}

message resLeaveTable {
    required int32 uid = 1;
    optional int32 result = 2; //如果有值，1000表示离开房间失败，1001表示房间由于没人而解散，1002表示游戏正常结束了
}

message reqSitDown {
    required int32 seatid = 1;//-1表示站起來
}

message resSitDown {
    required int32 uid = 1;
    required int32 seatid = 2;
    optional string nickname = 3;
    optional string headimg = 4;
}

message reqChat {
    required int32 type = 1;//1文字 2表情 3语音
    required int32 to = 2;//对象的id，默认传0表示所有人
    required string msg = 3;
}

message resChat {
    required int32 type = 1;//1文字 2表情 3语音
    required int32 to = 2;//对象的id，默认传0表示所有人
    required string msg = 3;
    required int32 uid = 4;//发送人的ID
}

message GetReadyNtf {
    required int32 uid = 1;
    required int32 seatid = 2;
}

message GameStart {
    optional int32 endtime = 1;
}

message UserOffline {
    required int32 uid = 1;
}

message UserOnline {
    required int32 uid = 1;
}



message StartRound {
    required int32 round = 1;
    required int32 total = 2;
}

message EnterTable {
    required int32 uid = 1; //用户uid
    required string nickname = 2; //用户昵称
    required int32 seatid = 3; //用户座位
    required int32 sex = 4; //性别
    required int32 online = 5; //是否在线，1在线，0不在线
    optional int32 ready = 6; //是否已经准备，1准备，0为准备
    optional int32 score = 7; //当前分值
    optional sint64 gold = 8; //金币
    optional int32 money = 9; //红包
    optional string headimg = 10; //头像
}

message GmChangeCards {
    repeated int32 cards = 1;
    required int32 uid = 2;
}

//断线重连需要恢复现场的时候发
message Resume {
}

//百人游戏恢复房间
message BRResume {
    message SteatInfo {
        required int32 count = 1; //总卡牌数量
        repeated int32 cards = 2; //明牌
        repeated int32 bets = 3; //总下注情况{type, conut, type, count ...}
        repeated int32 selfbets = 4; //自己的下注情况{type, conut, type, count ...}
    }
    required int32 status = 1; //当前状态
    required int32 count = 2; //庄家的总卡牌数量
    required int32 gold = 3; //玩家金币
    optional int32 time = 4; //当前状态剩余时间
    optional int32 btimes = 5; //当庄次数
    optional int32 cardsnum = 6; //剩余卡牌个数
    optional int32 openrate = 7; //开牌随机数
    repeated int32 cards = 8; //庄家已经明掉的牌
    repeated int32 record = 9; //历史记录
    repeated SteatInfo infos = 10; //玩家的卡牌
}

//百人游戏用户押注
message BRBetReq {
    required int32 pos = 1; //押注位置
    required sint64 gold = 2; //押注金币
}
message BRBetRep {
    required int32 pos = 1; //押注位置
    required int32 betgold = 2; //押注金币
    required sint64 gold = 3; //玩家剩余的金币
}

//百人游戏用户状态
message BRStatusNtf {
    required int32 status = 1; //游戏状态
    required int32 time = 2; //状态等待时间
}

//百人游戏每秒发送下注
message BRBetNtf {
    message SteatInfo {
        repeated int32 bets = 1; //总下注{type, conut, type, count ...}
        repeated int32 selfbets = 2; //自己的下注情况{type, conut, type, count ...}
    }
    repeated SteatInfo infos = 1; //玩家的卡牌
}


//百人游戏结算
message BRResult {
    message Ranking {
        required string nickname = 1; //用户昵称
        optional sint64 gold = 2; //金币
    }
    required int32 wingold = 1; //用户金币
    required sint64 gold = 2; //用户金币
    required int32 mwgold = 3; //庄家输赢
    required int32 mgold = 4; //庄家剩余的钱
    repeated int32 iswin = 5; //位置输赢
    optional int32 cardsnum = 6; //剩余卡牌个数
    optional int32 openrate = 7; //开牌随机数
    repeated Ranking ranking = 8; //排行数据
}

//百人游戏庄家列表
message BRMasterList {
    message player {
        required int32 uid = 1; //用户uid
        required string nickname = 2; //用户昵称
        required int32 sex = 3; //性别
        optional sint64 gold = 4; //金币
        optional string headimg = 5; //用户头像的URL
    }
    repeated player players = 1; //玩家列表
}

//***************************** 以下是麻将协议 ***********************//

//麻将桌信息
message MJGameInfo {
    optional int32 banker = 1;     //庄家座位号
    optional int32 leftCard = 2;      //剩余牌数
    repeated int32 dices = 3;          //骰子
    optional int32 lastSeatid = 4;    //操作的上家
    optional int32 lastCard = 5;      //操作的上家的牌
    optional int32 winType = 6;       //1自摸胡
    optional int32 hitNum = 7;        //抓鸟个数
    optional int32 redCard = 8;       //红中癞子
    optional int32 trumpCard = 9;     //258做将
    optional int32 sevenCard = 10;    //胡7对
    optional int32 handCount = 11;
    optional int32 gameNum = 12;      //总局数
    optional int32 duration = 13;
    optional int32  startTime = 14;
    optional int32  baseScore = 15;
    optional int32 hitOffset = 16;
    optional int32 gameStartTime = 17;
    optional int32 chips = 18;
    optional int32 settle = 19;
    repeated int32 askers = 20; //请求结束牌局玩家
    optional int32 oneColor = 21; //清一色
    optional int32 duiduihu  = 22; //对对胡
    optional int32 bonusDouble = 23; //抓鸟翻倍
    repeated int32 shifter = 24;        //鬼牌
}

//发牌
message MJCardMove {
    repeated int32 cards = 1;
    optional int32 fromSeatid = 2;  //来源 正常摸牌是等于to_seatid等于玩家的seatid
    optional int32 toSeatid = 3;      //去向
    optional int32 areaid = 4;         //牌的位置 1手中 2吃碰杠 3打出去
    optional int32 opttype = 5;        //玩家操作
}

//玩家操作通知
message MJPlayerOpt {
    message Opt {
        required int32 opttype = 1;
        repeated int32 cards = 2;
    }
    required int32 seatid = 1;         
    optional int32 timeout = 2;
    repeated Opt opts = 3;
}

//玩家操作
message MJPlayerOptReq {
    message Opt {
        required int32 opttype = 1;
        repeated int32 cards = 2;
    }
    optional Opt opts = 1;
}

//发给玩家
message MJPlayerOptRep {
    required int32 result = 1;
}

//赢家信息
message MJWinnersInfo {
    message WinnerInfo {
        required int32 seatid = 1;
        repeated int32 handcards = 2;
        repeated int32 angang = 3;
        repeated int32 winDetail = 4;
        repeated int32 winFan = 5;
    }

    repeated WinnerInfo winnerInfo = 1;    //赢家的信息
    required int32 wincard = 2;            //赢的牌
    required int32 loseSeatid = 3;        //点炮的座位号
    required int32 winType = 4;
    repeated int32 horseTile = 5;          //马牌
}

message MJShowCards {
    message ShownCards {
        required int32 seatid = 1;
        repeated int32 handcards = 2;
        repeated int32 angang = 3;
    }
    repeated ShownCards showncards = 1;
}

message MJGameEnd {
    message Score {
        required int32 seatid = 1;
        optional int32 endScore = 2;
        optional int32 gangScore = 3;
        optional int32 genzhuangScore = 4;
        optional int32 lianzhuangScore = 5;
    }

    optional int32 winType = 1;
    repeated Score scores = 2;
    repeated int32 hitTiles = 3;    //中马牌
}

//***************************** 以上是麻将协议 ***********************//

//解散房间
message DissolveTable{
    required int32 opt = 1;   //1解散 2同意 3拒绝
}

message PushDissolveTable{
    optional int32 result = 1;   //1解散 2解散成功 3解散失败 4冷却中
    repeated int32 consentUid = 2;
    repeated int32 refuseUid = 3;
    optional int32 remaintime = 4;
}

message MJGameStop {
     message info {
        required int32 uid = 1;
        required string nickname = 2;
        required int32 winown = 3; //自摸局数
        required int32 winother = 4; //抓炮局数
        required int32 minggang = 5; //明杠
        required int32 angang = 6; //暗杠
        required int32 score = 7; 
    }
    required int32 round = 1; //总局数
    repeated info infos = 2;
}

message MJResume {
    message tilesinfo {
        required int32 uid = 1;
        required int32 tilenum = 2; //手牌数量
        repeated int32 tiles = 3;  //手牌 若为其他人则为空
        repeated int32 chi = 4;
        repeated int32 peng = 5;
        repeated int32 minggang = 6;
        repeated int32 angang = 7;  //暗杠，若是自己传牌 否则为-1
        repeated int32 desk = 8;    //已经出的牌
    }
    message Opt {
        required int32 opttype = 1;
        repeated int32 cards = 2;
    }
    required int32 status = 1;  //当前状态
    optional int32 time = 2;    //当前状态剩余时间
    optional int32 curuid = 3;  //当前操作人
    repeated tilesinfo tiles = 4;  //玩家手牌
    optional int32 tile = 5;  //摸到的牌
    //6和7只有在status为等待玩家吃碰杠 且当前操作玩家正是自己时才有效
    optional int32 seatid = 6; //出牌人的座位
    repeated Opt opts = 7; 
    optional int32 leftCard = 8;        //剩余牌的数量
    optional int32 banker = 9;          //当前庄家
    repeated int32 shifter = 10;        //鬼牌
    repeated int32 dices = 11;          //筛子
}

message GoldPool{
    required int32 goldpool=1;
}

message FishChangeBase {
    required int32 uid = 1;
    required int32 base = 2;
}


message ChangeGroud{
    required int32 desktop = 1;
}

//百人游戏玩家列表
message BRUserList {
    message player {
        required int32 uid = 1; //用户uid
        required string nickname = 2; //用户昵称
        required int32 sex = 3; //性别
        optional sint64 gold = 4; //金币
        optional string headimg = 5; //用户头像的URL
    }
    repeated player players = 1; //玩家列表
}

message SendMessage{            //服务器发送给客户端的信息
    optional string sendmessage=1;
}

message WinGoldPoolHistory{       //彩金池中奖就记录
    message History{
        optional string time = 1; //时间
        optional string nickname = 2; //用户昵称
        optional int32 type = 3; //获奖类型
        optional sint64 gold = 4; //金币
    }
    repeated History history = 1; //历史信息列表
}

//麻将调牌
message MJGMSetNextCard{
    required int32 card = 1;
}

//通用的,用于更新游戏内的金币变化，例如外部冲钱了，需要通知给用户客户端界面
message UpdateGoldInGame {
    required int32 uid = 1; 
    required int32 goldadd = 2; //本次金币变化，可为负值表示扣钱
    required int32 gold = 3; //变化后剩余的金币量
}

message CompareScore{
    optional int32 times1 = 1;//比倍类型1：半倍，2：比倍
    optional int32 times2 = 2;//次数
}

message CompareScoreResult{
    repeated int32 cards = 1;
    optional sint64 wingold = 2;
    optional sint64 gold = 3;
    optional sint64 owngold = 4;
}

//麻将开局动画播完开始发牌
message MJRequestDealTiles{
}
